* golang
  目标：熟练掌握go语言开发，熟悉go语言内核实现

* golang 开发环境搭建
   [[file:my-go-env.png]]

* 目录
  - go安装 
  - 环境变量
  - 配置代理
  - godef等工具安装
  - go-mode插件

* golang 开发环境搭建

** go 安装

*** MacOS
  下载golang安装包并安装, 安装完成后将 =/usr/local/go/bin= 目录加入到
  =PATH= 环境变量中, 可以先使用命 =echo $PATH= 查看PATH环境变量, 如果
  没有则在shell配置文件中加入：
 
  #+begin_src
  export PATH=$PATH:/usr/local/bin
  #+end_src

  Tips: 如果使用bash, 配置文件是~/.bashrc
        如果使用zsh, 配置文件是~/.zshrc
 
  使用 =go version= 查查看golang版本号, 如果成功显示版本号, go 安装成功。 

*** Linux

*** Windows 

** go环境变量
  =GOPATH= 是go语言中的环境变量，可以使用 =go env | grep GOPATH= 命令
  查看，一般默认值为 ='/Users/artsing/go'=, 该目录是项目开发的绝对路径。
  
  使用 =go install= 命令安装go工具（例如：godef），默认安装到
  =GOPATH/bin= 目录中，因此需要将 =$GOPATH/bin= 加入到 =PATH= 变量中：
  =export PATH=$PATH:/usr/local/bin=

** 配置go代理
  例如配置阿里云的go代理如下：

  #+begin_src
  go env -w GO111MODULE=on
  go env -w GOPROXY="https://goproxy.cn"
  #+end_src

| 提供者       | 地址                                |
|--------------+-------------------------------------|
| 官方全球代理 | https://proxy.golang.com.cn         |
| 官方         | https://goproxy.io,direct           |
| 七牛云       | https://goproxy.cn                  |
| 阿里云       | https://mirrors.aliyun.com/goproxy/ |
| GoCenter     | https://gocenter.io                 |
| 百度         | https://goproxy.bj.bcebos.com/      |

** godef等工具安装
| 工具         | 描述     | 地址                                             |
|--------------+----------+--------------------------------------------------|
| gopls        | 代码导航 | golang.org/x/tools/gopls@latest                  |
| staticcheck  | 语法检查 | honnef.co/go/tools/cmd/staticcheck@latest        |
| dlv          | 调试     | honnef.co/go/tools/cmd/staticcheck@lates         |
| gotests      | 测试     | github.com/cweill/gotests/gotests@latest         |
| go-outline   | 大纲     | github.com/lukehoban/go-outline@latest           |
| gomodifytags | Tags     | go get github.com/cavebeavis/gomodifytags@latest |
| impl         | 接口实现 | github.com/josharian/impl@latest                 |

  使用 =go install= 安装命令如下：
  =go install github.com/rogpeppe/godef@latest=


** Virtual Studio Code
  在扩展中搜索go, 安装golang插件。

** Emacs

*** go-mode 插件
  在 =~/.custom.el= 中添加如下内容

  #+begin_src elisp
  (require-package 'go-mode)
  #+end_src

*** eglot 插件
#+begin_src elisp
;; config eglot
(require 'project)

(defun project-find-go-module (dir)
  (when-let ((root (locate-dominating-file dir "go.mod")))
    (cons 'go-module root)))

(cl-defmethod project-root ((project (head go-module)))
  (cdr project))

(add-hook 'project-find-functions #'project-find-go-module)

;; golang main mode
(require-package 'go-mode)

;; (require 'eglot)
(add-hook 'go-mode-hook 'eglot-ensure)

;; Optional: install eglot-format-buffer as a save hook.
;; The depth of -10 places this before eglot's willSave notification,
;; so that that notification reports the actual contents that will be saved.
(defun eglot-format-buffer-on-save ()
  (add-hook 'before-save-hook #'eglot-format-buffer -10 t))
(add-hook 'go-mode-hook #'eglot-format-buffer-on-save)

(setq-default eglot-workspace-configuration
    '((:gopls .
        ((staticcheck . t)
         (matcher . "CaseSensitive")))))

  #+end_src

*** go-dlv 插件
**** 安装
     M-x package install
     dlv <ENTER>

**** 使用
    M-x dlv-current-function 
    然后使用dlv命令来调试代码

*** lsp-mode 插件
  在 =.emacs.d/init.pl= 中添加如下配置代码：

#+begin_src elisp
;; config lsp-mode
(require 'lsp-mode)
(add-hook 'go-mode-hook #'lsp-deferred)

;; Set up before-save hooks to format buffer and add/delete imports.
;; Make sure you don't have other gofmt/goimports hooks enabled.
(defun lsp-go-install-save-hooks ()
  (add-hook 'before-save-hook #'lsp-format-buffer t t)
  (add-hook 'before-save-hook #'lsp-organize-imports t t))
(add-hook 'go-mode-hook #'lsp-go-install-save-hooks)

(lsp-register-custom-settings
  '(("gopls.completeUnimported" t t)
     ("gopls.staticcheck" t t)))
#+end_src 

*** dap-mode 插件

